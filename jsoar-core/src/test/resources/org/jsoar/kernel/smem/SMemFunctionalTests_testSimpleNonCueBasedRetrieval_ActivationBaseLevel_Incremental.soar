smem --set learning on
smem --set activation-mode base-level
smem --set activate-on-query on

smem --set base-incremental-threshes 1
smem --set base-update-policy incremental

# Add some data with multiple levels
smem --add {
  (<x> ^name foo
  	   ^location <loc>)
  (<loc> ^x 1 ^y 2 ^z 3) 
  (<x2> ^name bar
        ^location <loc2>)
  (<loc2> ^x 2 ^y 3 ^z 1)
}

sp {propose*first-query
  (state <s> ^superstate nil 
  		    -^first)
--> 
  (<s> ^operator.name first-query)
}

sp {apply*first-query
  (state <s> ^operator.name first-query
             ^smem.command <sc>)
-->
  (<sc> ^query.name foo)
  (<s> ^first done)
}

sp {propose*second-query
  (state <s> ^superstate nil 
  			 ^first done
  			-^second)
--> 
  (<s> ^operator.name second-query)
}

sp {apply*second-query
  (state <s> ^operator.name second-query
             ^smem.command <sc>
             ^smem.result.retrieved.location <loc>)
  (<sc> ^query <first-query>)
-->
  (<sc> ^query <first-query> -)
  (<sc> ^query.name bar)
  (<s> ^second done)
}

sp {propose*third-query
   (state <s> ^superstate nil
              ^second done
             -^third)
-->
   (<s> ^operator.name third-query)
}

sp {apply*third-query
   (state <s> ^operator.name third-query
              ^smem.command <sc>
              ^smem.result.retrieved.location <loc>)
   (<sc> ^query <second-query>)
-->
   (<sc> ^query <second-query> -
         ^retrieve <loc>)
   (<s> ^third done)
}

sp {success
  (state <s> ^smem.result.retrieved <lti>)
  (<lti> ^x 2 ^y 3 ^z 1)
-->
  (write |Success!|)
  (halt)
}


